{"ast":null,"code":"var _jsxFileName = \"/home/john/Development/phase5/IReporter/src/context/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true); // Add loading state to manage async checks\n\n  useEffect(() => {\n    const token = localStorage.getItem('access_token');\n    if (token) {\n      fetch('http://127.0.0.1:5555/check_session', {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        }\n      }).then(response => response.json()).then(data => {\n        if (data.id) {\n          setUser(data);\n        } else {\n          localStorage.removeItem('access_token');\n        }\n      }).catch(() => {\n        localStorage.removeItem('access_token');\n      }).finally(() => setLoading(false)); // Set loading to false after check is complete\n    } else {\n      setLoading(false); // Set loading to false if no token is found\n    }\n  }, []);\n  const login = (email, password) => {\n    return fetch('http://127.0.0.1:5555/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    }).then(response => response.json()).then(data => {\n      if (data.access_token) {\n        localStorage.setItem('access_token', data.access_token);\n        return fetch('http://127.0.0.1:5555/check_session', {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${data.access_token}`\n          }\n        }).then(response => response.json()).then(userData => {\n          if (userData.id) {\n            setUser(userData);\n            return userData;\n          } else {\n            throw new Error('Failed to fetch user details');\n          }\n        });\n      } else {\n        throw new Error('Invalid email or password');\n      }\n    });\n  };\n  const logout = () => {\n    localStorage.removeItem('access_token');\n    setUser(null);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 16\n    }, this); // Optionally show a loading spinner or message while checking session\n  }\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","loading","setLoading","token","localStorage","getItem","fetch","method","headers","then","response","json","data","id","removeItem","catch","finally","login","email","password","body","JSON","stringify","access_token","setItem","userData","Error","logout","fileName","_jsxFileName","lineNumber","columnNumber","Provider","value","_c","useAuth","_s2","$RefreshReg$"],"sources":["/home/john/Development/phase5/IReporter/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\n\nconst AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n    const [user, setUser] = useState(null);\n    const [loading, setLoading] = useState(true); // Add loading state to manage async checks\n\n    useEffect(() => {\n        const token = localStorage.getItem('access_token');\n        if (token) {\n            fetch('http://127.0.0.1:5555/check_session', {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${token}`\n                }\n            })\n            .then(response => response.json())\n            .then(data => {\n                if (data.id) {\n                    setUser(data);\n                } else {\n                    localStorage.removeItem('access_token');\n                }\n            })\n            .catch(() => {\n                localStorage.removeItem('access_token');\n            })\n            .finally(() => setLoading(false)); // Set loading to false after check is complete\n        } else {\n            setLoading(false); // Set loading to false if no token is found\n        }\n    }, []);\n\n    const login = (email, password) => {\n        return fetch('http://127.0.0.1:5555/login', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ email, password })\n        })\n        .then(response => response.json())\n        .then(data => {\n            if (data.access_token) {\n                localStorage.setItem('access_token', data.access_token);\n                return fetch('http://127.0.0.1:5555/check_session', {\n                    method: 'GET',\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Authorization': `Bearer ${data.access_token}`\n                    }\n                })\n                .then(response => response.json())\n                .then(userData => {\n                    if (userData.id) {\n                        setUser(userData);\n                        return userData;\n                    } else {\n                        throw new Error('Failed to fetch user details');\n                    }\n                });\n            } else {\n                throw new Error('Invalid email or password');\n            }\n        });\n    };\n\n    const logout = () => {\n        localStorage.removeItem('access_token');\n        setUser(null);\n    };\n\n    if (loading) {\n        return <div>Loading...</div>; // Optionally show a loading spinner or message while checking session\n    }\n\n    return (\n        <AuthContext.Provider value={{ user, login, logout }}>\n            {children}\n        </AuthContext.Provider>\n    );\n};\n\nexport const useAuth = () => useContext(AuthContext);\n\nexport default AuthContext;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}